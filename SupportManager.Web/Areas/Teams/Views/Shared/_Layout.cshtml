<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - SupportManager</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/Site.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.min.css" />
</head>
<body>
<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <div class="container">
        @Html.ActionLink("SupportManager", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        <button type="button" class="navbar-toggler" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">@Html.ActionLink($"Team {ViewData["TeamName"]}", "Index", "Home", null, new { @class = "nav-link" })</li>
                <li class="nav-item">@Html.ActionLink("Report", "Index", "Report", null, new { @class = "nav-link" })</li>
            </ul>
            <div class="navbar-text navbar-right">Hello, @User.Identity.Name!</div>
        </div>
    </div>
</nav>

    <div class="container">
        @RenderBody()

        <div class="row">
            <div class="col-lg-12">
                <hr />
                <footer>
                    &copy; @DateTime.Now.Year - <a href="http://github.com/mycroes/">Michael Croes</a>
                </footer>
            </div>
        </div>
    </div>


<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/lib/popper.js/dist/umd/popper.min.js"></script>
<script type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>

@RenderSection("scripts", required: false)
<script type="text/javascript">
    var highlightFields = function (response) {

        $('.form-group').removeClass('has-error');

        $.each(response, function (propName, val) {
            var nameSelector = '[name = "' + propName.replace(/(:|\.|\[|\])/g, "\\$1") + '"]',
                idSelector = '#' + propName.replace(/(:|\.|\[|\])/g, "\\$1");
            var $el = $(nameSelector) || $(idSelector);

            if (val.Errors.length > 0) {
                $el.closest('.form-group').addClass('has-error');
            }
        });
    };
    var highlightErrors = function (xhr) {
        try {
            var data = JSON.parse(xhr.responseText);
            highlightFields(data);
            showSummary(data);
            window.scrollTo(0, 0);
        } catch (e) {
            // (Hopefully) caught by the generic error handler in `config.js`.
        }
    };
    var showSummary = function (response) {
        $('#validationSummary').empty().removeClass('hidden');

        var verboseErrors = _.flatten(_.pluck(response, 'Errors')),
            errors = [];

        var nonNullErrors = _.reject(verboseErrors, function (error) {
            return error.ErrorMessage.indexOf('must not be empty') > -1;
        });

        _.each(nonNullErrors, function (error) {
            errors.push(error.ErrorMessage);
        });

        if (nonNullErrors.length !== verboseErrors.length) {
            errors.push('The highlighted fields are required to submit this form.');
        }

        var $ul = $('#validationSummary').append('<ul></ul>');

        _.each(errors, function (error) {
            var $li = $('<li></li>').text(error);
            $li.appendTo($ul);
        });
    };
    var redirect = function (data) {
        if (data.redirect) {
            window.location = data.redirect;
        } else {
            window.scrollTo(0, 0);
            window.location.reload();
        }
    };

    $('form[method=post]').not('.no-ajax').on('submit', function () {
        var submitBtn = $(this).find('[type="submit"]');

        submitBtn.prop('disabled', true);
        $(window).unbind();

        var $this = $(this),
            formData = $this.serialize();

        $this.find('div').removeClass('has-error');

        $.ajax({
            url: $this.attr('action'),
            type: 'post',
            data: formData,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            dataType: 'json',
            statusCode: {
                200: redirect
            },
            complete: function () {
                submitBtn.prop('disabled', false);
            }
        }).fail(highlightErrors);

        return false;
    });
</script>
    
<script type="text/javascript">
    $(function() {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>
</body>
</html>
